{"version":3,"sources":["webpack:///../src/shared.js","webpack:///../src/index.js","webpack:///../src/utils/attribute.js","webpack:///../src/utils/element.js","webpack:///../src/utils/util.js","webpack:///../src/directives/if.js","webpack:///../src/directives/show.js","webpack:///../src/directives/model.js","webpack:///../src/directives/for.js","webpack:///../src/directives/class.js","webpack:///./src/editor.js","webpack:///./src/code/js.js","webpack:///./src/code/css.js","webpack:///./src/code/options.js","webpack:///./src/preview.js","webpack:///./src/index.js","webpack:///../src/utils/builder.js"],"names":["optionsValidate","assert","require","Ajv","ajvErrors","opts","prefix","pragmaType","DIRECTIVES","module","exports","syncOpts","options","ajv","allErrors","jsonPointers","compile","properties","type","pattern","errorMessage","minLength","errors","message","Object","assign","attrUtil","elemUtil","codeFrameWarn","assertVersion","transformIf","transformShow","transformModel","transformFor","transformClass","api","version","name","manipulateOptions","parserOpts","plugins","push","some","p","Array","isArray","visitor","Program","path","state","JSXElement","JSXAttribute","elementPath","IF","buildCodeFrameError","ELSE","ELSE_IF","SHOW","MODEL","FOR","CLASS","remove","t","AttributeUtil","this","node","isValid","isJSXAttribute","isJSXNamespacedName","namespace","value","isJSXExpressionContainer","isExpression","expression","get","valuePath","findParent","_path","isJSXElement","attributeUtil","Proxy","target","receiver","Reflect","generator","ElementUtil","openingElement","isIdentifier","code","result","attributes","i","length","attrName","index","ns","split","hasNamespace","attrPath","getNextSibling","getSibling","key","nextPath","isJSXText","test","_value","prop","directivePath","find","getResult","mergeItems","lastAttrIndex","lastSpreadAttrIndex","setValue","val","isJSXSpreadAttribute","argument","replacement","jsxAttribute","jsxIdentifier","jsxExpressionContainer","reverse","pushContainer","parent","isJSXFragment","elementUtil","codeFrameColumns","chalk","semver","getMemberPathStack","stack","isMemberExpression","hub","findDeconstructionPathStack","identifierName","isObjectPattern","isArrayPattern","targetPath","nestedVisitor","Identifier","isObjectProperty","traverse","parentPath","elements","indexOf","likeNumericLiteral","create","getPrototypeOf","numericLiteral","start","end","loc","isThisExpression","process","env","JEST_TEST_ENV","console","log","yellow","file","highlightCode","linesAbove","linesBelow","range","minSatisfying","getReferenceStack","bindingStack","binding","scope","bindings","first","refsStack","splice","isNullLiteral","Condition","directive","_traverseList","traverseIf","attrs","filter","attr","stop","traverseCondition","_lastResult","valueExpr","nextSibling","findAttrPath","forEach","conditions","directiveData","isTopElement","replaceWith","conditionalExpression","nullLiteral","reduceRight","prev","curr","testExpr","transform","builder","bindingValue","mergeProps","isStringLiteral","objectExpression","objectProperty","identifier","spreadElement","buildCallRuntimeExpression","stringLiteral","arrayExpression","thisExpression","Boolean","getMergeValueExpression","stateBindingStack","newValExpression","prevState","useType","nodeStack","map","statements","resolveValues","buildMemberExpression","_","defineStatements","varId","resolveExp","isNumericLiteral","variableDeclaration","variableDeclarator","expressionStatement","callExpression","memberExpression","prevVar","currentNode","scopeVar","generateUidIdentifier","setOnChangeProp","argsVar","valueVar","setStateExpression","prevStateVar","arrowFunctionExpression","blockStatement","returnStatement","buildClassSetStateExpression","defineVar","isVariableDeclarator","MODEL_HOOK","updateFn","defineVarId","canMerge","n","slice","mergeResult","buildHookSetStateExpression","noResolve","restElement","thisPath","shift","statePath","useStatePath","valid","isCallExpression","callee","object","property","stateValuePath","setValueProp","isBinaryExpression","operator","left","isSequenceExpression","expressions","every","traverseArgs","traverseTarget","right","monaco","editor","defineTheme","setTheme","editorStyle","fontSize","lineHeight","tabSize","minimap","enabled","currentTab","jsEditor","document","getElementById","language","cssEditor","optionsEditor","refreshActiveEditor","setTimeout","layout","querySelector","addEventListener","e","getAttribute","window","throttle","preview","style","ready","previewWindow","previewDocument","_autoRender","updateCSS","css","innerHTML","render","js","Babel","presets","availablePresets","es2017","react","JSON","parse","availablePlugins","__render__","__catchError__","renderPreview","getRenderValues","editors","getValue","src","Date","now","contentWindow","onDidChangeModelContent","debounce","_renderPreview","JsTabs","elm","init","display","args","reduce","fileName","contextExpr","runtimeMethodExpr"],"mappings":"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","file":"js/main.10156e7446.js","sourcesContent":["const assert = require('assert');\nconst Ajv = require('ajv');\nconst ajvErrors = require('ajv-errors');\n\n// plugin option\nconst opts = {\n  prefix: 'x',\n  pragmaType: 'React'\n};\n\n// 指令名\nconst DIRECTIVES = {\n  get IF() {\n    return `${opts.prefix}-if`;\n  },\n  get ELSE() {\n    return `${opts.prefix}-else`;\n  },\n  get ELSE_IF() {\n    return `${opts.prefix}-else-if`;\n  },\n  get SHOW() {\n    return `${opts.prefix}-show`;\n  },\n  get FOR() {\n    return `${opts.prefix}-for`;\n  },\n  get MODEL() {\n    return `${opts.prefix}-model`;\n  },\n  get MODEL_HOOK() {\n    return `${opts.prefix}-model-hook`;\n  },\n  get CLASS() {\n    return `${opts.prefix}-class`;\n  }\n};\n\nlet optionsValidate;\n\n/**\n * 更新插件options\n * @param options\n */\nfunction syncOpts(options = {}) {\n  const {\n    prefix,\n    pragmaType\n  } = options;\n\n  if (!optionsValidate) {\n    const ajv = new Ajv({ allErrors: true, jsonPointers: true });\n    optionsValidate = ajvErrors(ajv).compile({\n      properties: {\n        prefix: {\n          type: 'string',\n          pattern: '^[A-Za-z$_][A-Za-z0-9$_]*$',\n          errorMessage: 'The `prefix` option should be a string which javascript identifier, example: `foo`, `$abc`, `_abc123`.',\n        },\n        pragmaType: {\n          type: 'string',\n          minLength: 1,\n          errorMessage: 'The `pragmaType` option should be a non-empty string.'\n        }\n      }\n    });\n  }\n\n  assert(\n    optionsValidate(options),\n    optionsValidate.errors\n    && optionsValidate.errors[0]\n    && optionsValidate.errors[0].message\n  );\n\n  Object.assign(opts, {\n    prefix: prefix || 'x',\n    pragmaType: pragmaType || 'React'\n  });\n}\n\n\nmodule.exports = {\n  DIRECTIVES,\n  opts,\n  syncOpts,\n};\n","const { DIRECTIVES, syncOpts } = require('./shared');\nconst attrUtil = require('./utils/attribute');\nconst elemUtil = require('./utils/element');\nconst { codeFrameWarn, assertVersion } = require('./utils/util');\n\nconst transformIf = require('./directives/if');\nconst transformShow = require('./directives/show');\nconst transformModel = require('./directives/model');\nconst transformFor = require('./directives/for');\nconst transformClass = require('./directives/class');\n\n\nmodule.exports = (api) => {\n  if (api.assertVersion) {\n    api.assertVersion('>= 6.20.0');\n  } else {\n    assertVersion(api.version, '>= 6.20.0');\n  }\n\n  return {\n    name: 'react-directives',\n\n    /* istanbul ignore next: reference third party lib */\n    // https://github.com/babel/babel/blob/v7.6.2/packages/babel-plugin-syntax-jsx/src/index.js\n    manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push('objectRestSpread');\n\n      // If the Typescript plugin already ran, it will have decided whether\n      // or not this is a TSX file.\n      if (parserOpts.plugins.some((p) => (Array.isArray(p) ? p[0] : p) === 'typescript')) {\n        return;\n      }\n      parserOpts.plugins.push('jsx');\n    },\n\n    visitor: {\n      Program(path, state) {\n        syncOpts(state.opts);\n      },\n      JSXElement(path) {\n        transformShow(path);\n        transformModel(path);\n        transformClass(path);\n        transformFor(path);\n        transformIf(path);\n      },\n      JSXAttribute(path) {\n        const name = attrUtil(path).name();\n        let elementPath;\n\n        switch (name) {\n          case DIRECTIVES.IF:\n            throw path.buildCodeFrameError(\n              `There should be no more than one directive: \\`${name}\\`.`\n            );\n\n          case DIRECTIVES.ELSE:\n          case DIRECTIVES.ELSE_IF:\n            elementPath = attrUtil(path).JSXElement();\n            throw path.buildCodeFrameError(\n              `\\`${name}\\` used on element <${elemUtil(elementPath).name()}> without corresponding \\`${DIRECTIVES.IF}\\`.`\n            );\n\n          case DIRECTIVES.SHOW:\n          case DIRECTIVES.MODEL:\n          case DIRECTIVES.FOR:\n          case DIRECTIVES.CLASS:\n            codeFrameWarn(\n              path,\n              `There should be no more than one directive: \\`${name}\\``\n            );\n            path.remove();\n            break;\n\n          default:\n        }\n      }\n    }\n  };\n};\n","const t = require('@babel/types');\n\n\nclass AttributeUtil {\n  constructor(path) {\n    this.path = path;\n    this.node = path && path.node;\n    this.isValid = t.isJSXAttribute(this.node);\n  }\n\n  /**\n   * 返回属性名称\n   * @return {string}\n   */\n  name() {\n    // such as: <div abc:def=\"\" />\n    if (t.isJSXNamespacedName(this.node.name)) {\n      return `${this.node.name.namespace}:${this.node.name.name}`;\n    }\n    return this.node.name.name;\n  }\n\n  /**\n   * 返回属性值NodePath\n   * @return {NodePath|null}\n   */\n  valuePath() {\n    if (this.node.value === null) {\n      return null;\n    }\n    if (t.isJSXExpressionContainer(this.node.value)) {\n      if (t.isExpression(this.node.value.expression)) {\n        return this.path.get('value.expression');\n      }\n      return null;\n    }\n    if (this.node.value !== null) {\n      return this.path.get('value');\n    }\n    return null;\n  }\n\n  /**\n   * 返回属性值表达式\n   * @return {Node|null}\n   */\n  valueExpr() {\n    const valuePath = this.valuePath();\n    if (valuePath) {\n      return valuePath.node || null;\n    }\n    return null;\n  }\n\n  /**\n   * 返回对应的JSXElement\n   * @return {JSXElement}\n   */\n  JSXElement() {\n    return this.path.findParent(\n      (_path) => t.isJSXElement(_path.node)\n    );\n  }\n}\n\n\nmodule.exports = function attrUtil(path) {\n  const attributeUtil = new AttributeUtil(path);\n\n  return new Proxy(attributeUtil, {\n    get(target, p, receiver) {\n      /* istanbul ignore if: fault tolerant control */\n      if (!target.isValid && typeof target[p] === 'function') {\n        return () => null;\n      }\n      return Reflect.get(target, p, receiver);\n    }\n  });\n};\n","const t = require('@babel/types');\nconst { default: generator } = require('@babel/generator');\n\n\nclass ElementUtil {\n  constructor(path) {\n    this.path = path;\n    this.node = path && path.node;\n    this.isValid = t.isJSXElement(this.node);\n  }\n\n  /**\n   * 返回标签名\n   * @return {string}\n   */\n  name() {\n    const name = this.node.openingElement.name;\n    if (t.isIdentifier(name)) {\n      return name.name;\n    }\n    return generator(name).code;\n  }\n\n  /**\n   * 返回所有的属性NodePath\n   * @return {Array<NodePath>}\n   */\n  attributes() {\n    const result = [];\n    const attributes = this.node.openingElement.attributes;\n\n    for (let i = 0; i < attributes.length; i++) {\n      result.push(this.path.get(`openingElement.attributes.${i}`));\n    }\n\n    return result;\n  }\n\n  /**\n   * 根据属性名返回的找到的第一个属性NodePath(从最后开始查找)\n   * @param attrName 属性名称\n   * @return {NodePath|null}\n   */\n  findAttrPath(attrName) {\n    const attributes = this.node.openingElement.attributes;\n    let index = attributes.length - 1;\n\n    const ns = attrName.split(':');\n    const hasNamespace = ns.length > 1;\n\n    while (index >= 0) {\n      const attrPath = this.path.get(`openingElement.attributes.${index}`);\n      if (t.isJSXAttribute(attrPath.node)) {\n        // 使用命名空间的属性\n        if (\n          hasNamespace\n          && t.isJSXNamespacedName(attrPath.node.name)\n          && attrPath.node.name.namespace === ns[0]\n          && attrPath.node.name.name === ns[1]\n        ) {\n          return attrPath;\n        }\n\n        if (!hasNamespace && attrPath.node.name.name === attrName) {\n          return attrPath;\n        }\n      }\n      index--;\n    }\n\n    return null;\n  }\n\n  /**\n   * 找出下一个可用的兄弟节点\n   * @return {NodePath|null}\n   */\n  nextSibling() {\n    const getNextSibling = (path) => {\n      return path.getSibling(path.key + 1);\n    };\n\n    let nextPath = getNextSibling(this.path);\n    if (!nextPath.node) {\n      return null;\n    }\n\n    if (t.isJSXText(nextPath.node)) {\n      if (/^\\s*$/.test(nextPath.node.value)) {\n        nextPath = getNextSibling(nextPath);\n      } else {\n        return nextPath;\n      }\n    }\n\n    if (!nextPath.node) {\n      return null;\n    }\n    return nextPath;\n  }\n\n  /**\n   * 合并属性\n   * @param option\n   * @return {null|NodePath}\n   */\n  mergeProps(\n    {\n      prop, // 属性名(用于合并及修改的属性名)\n      directivePath, // 指令属性的NodePath\n      find, // 遍历的attribute回调方法，返回值用于判断匹配成功\n      getResult // 合并结果回调方法，返回值用于设置到属性名上\n    }\n  ) {\n    const attributes = this.attributes();\n    const mergeItems = [];\n\n    let lastAttrIndex = -1; // 最后一个属性位置\n    let lastSpreadAttrIndex = -1; // 最后一个spread属性位置\n\n    // 用于find回调设置值\n    let _value;\n    const setValue = (val) => _value = val;\n\n    for (let i = attributes.length - 1; i >= 0; i--) {\n      const attrPath = attributes[i];\n      if (attrPath === directivePath) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (t.isJSXSpreadAttribute(attrPath.node)) {\n        if (lastSpreadAttrIndex === -1) {\n          lastSpreadAttrIndex = i;\n        }\n        mergeItems.push(attrPath.node.argument);\n      } else if (lastAttrIndex === -1 && find(attrPath, setValue)) {\n        lastAttrIndex = i;\n        if (_value) {\n          mergeItems.push(_value);\n        }\n        break;\n      }\n    }\n\n    // 创建用于替换属性\n    const replacement = t.jsxAttribute(\n      t.jsxIdentifier(prop),\n      t.jsxExpressionContainer(\n        getResult(mergeItems.reverse())\n      )\n    );\n\n    if (lastAttrIndex >= 0) {\n      attributes[lastAttrIndex].remove();\n    }\n    // 在最后插入替换属性\n    this.path.get('openingElement').pushContainer('attributes', replacement);\n\n    return replacement;\n  }\n\n  /**\n   * 是否是顶层Element\n   * @return {null|boolean}\n   */\n  isTopElement() {\n    return !t.isJSXElement(this.path.parent) && !t.isJSXFragment(this.path.parent);\n  }\n}\n\n\nmodule.exports = function elemUtil(path) {\n  const elementUtil = new ElementUtil(path);\n\n  return new Proxy(elementUtil, {\n    get(target, p, receiver) {\n      /* istanbul ignore if: fault tolerant control */\n      if (!target.isValid && typeof target[p] === 'function') {\n        return () => null;\n      }\n      return Reflect.get(target, p, receiver);\n    }\n  });\n};\n","const { codeFrameColumns } = require('@babel/code-frame');\nconst t = require('@babel/types');\nconst assert = require('assert');\nconst chalk = require('chalk');\nconst semver = require('semver');\n\n\n/**\n * 打印附带代码位置的警告信息\n * @param path\n * @param message\n */\nfunction codeFrameWarn(path, message) {\n  // jest测试时忽略\n  if (process.env.JEST_TEST_ENV) {\n    return;\n  }\n\n  /* istanbul ignore next: print warn info */\n  console.log(chalk.yellow(`[Warn]: ${message}`));\n\n  /* istanbul ignore next: print warn info */\n  if (path && path.hub && path.node) {\n    const code = path.hub.file.code;\n    console.log(codeFrameColumns(\n      code,\n      path.node.loc,\n      {\n        highlightCode: true,\n        linesAbove: 2,\n        linesBelow: 3\n      }\n    ));\n  }\n}\n\n\n/**\n * 断言babel版本是否支持\n * @param version\n * @param range\n */\nfunction assertVersion(version, range) {\n  assert(\n    semver.minSatisfying([version], range),\n    `Requires Babel \"${range}\", but was loaded with ${version}.`\n  );\n}\n\n/**\n * 返回一个对象的成员访问栈，如: a.b.c 返回 [pathA, pathB, pathC] 数组元素为对应的NodePath\n * @param path\n * @return {Array<NodePath>}\n */\nfunction getMemberPathStack(path) {\n  const stack = [];\n  while (t.isMemberExpression(path && path.node)) {\n    stack.push(path.get('property'));\n    path = path.get('object');\n  }\n  if (path && path.node && path.hub) { // 简单判断是一个NodePath对象\n    stack.push(path);\n  }\n  return stack.reverse();\n}\n\n/**\n * 找到一个变量在一个数组或对象的解构栈，如: let { a, b: [c] } = obj 中变量c的解构栈返回: [pathB, NumericLiteral(0)]\n * @param path\n * @param identifierName\n * @return {Array<NodePath>}\n */\nfunction findDeconstructionPathStack(path, identifierName) {\n  if (!t.isObjectPattern(path && path.node) && !t.isArrayPattern(path && path.node)) {\n    return [];\n  }\n\n  const stack = [];\n  let targetPath = null;\n  const nestedVisitor = {\n    Identifier(_path) {\n      if (\n        _path.node.name === identifierName\n        && (\n          (t.isObjectProperty(_path.parent) && _path.parent.value === _path.node)\n          || t.isArrayPattern(_path.parent)\n        )\n      ) {\n        targetPath = _path;\n        // Note: 这里不能停止遍历，要找出可能的最后一个标识符\n      }\n    }\n  };\n\n  path.traverse(nestedVisitor);\n\n  if (targetPath) {\n    while (targetPath !== path) {\n      if (t.isObjectProperty(targetPath.parent)) {\n        stack.push(targetPath.parentPath.get('key'));\n        targetPath = targetPath.parentPath && targetPath.parentPath.parentPath;\n      } else if (t.isArrayPattern(targetPath.parent)) {\n        const index = targetPath.parent.elements.indexOf(targetPath.node);\n        // 创建一个类PathNode对象(不能遍历)\n        const likeNumericLiteral = Object.create(Object.getPrototypeOf(targetPath));\n        likeNumericLiteral.node = {\n          ...t.numericLiteral(index),\n          start: targetPath.node.start,\n          end: targetPath.node.end,\n          loc: targetPath.node.loc\n        };\n        likeNumericLiteral.hub = targetPath.hub;\n        likeNumericLiteral.type = likeNumericLiteral.node.type;\n        stack.push(likeNumericLiteral);\n        targetPath = targetPath.parentPath;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return stack.reverse();\n}\n\n/**\n * 返回一个变量或成员表达式引用的对象成员栈\n * @param path\n * @return {[]}\n */\nfunction getReferenceStack(path) {\n  let bindingStack = [];\n\n  /* istanbul ignore if: fault tolerant control */\n  if (!path) {\n    return bindingStack;\n  }\n\n  /* istanbul ignore if: fault tolerant control */\n  if (t.isIdentifier(path.node)) {\n    const identifierName = path.node.name;\n    let binding = path.scope.bindings[identifierName];\n\n    if (!binding) {\n      const targetPath = path.findParent((p) => (\n        !!p.scope.bindings[identifierName]\n      ));\n      if (targetPath) {\n        binding = targetPath.scope.bindings[identifierName];\n      }\n    }\n\n    if (!binding) {\n      return bindingStack;\n    }\n\n    bindingStack = [\n      ...getMemberPathStack(\n        binding.path.get('init')\n      ),\n      ...findDeconstructionPathStack(\n        binding.path.get('id'),\n        identifierName\n      )\n    ];\n  } else if (t.isMemberExpression(path.node)) {\n    bindingStack = getMemberPathStack(path);\n  }\n\n  // 判断最后一个标识符是否引用了其他值\n  let first = bindingStack[0];\n  while (first && !isThisExpression(first.node)) {\n    const refsStack = getReferenceStack(first);\n    first = refsStack[0];\n    if (refsStack.length > 0) {\n      bindingStack.splice(0, 1, ...refsStack);\n    }\n  }\n\n  return bindingStack;\n}\n\n/**\n * 判断是否是this表达式\n * @param node\n * @return {Boolean}\n */\nfunction isThisExpression(node) {\n  return t.isThisExpression(node) || t.isIdentifier(node, { name: 'this' });\n}\n\n/**\n * 判断是否是null表达式\n * @param node\n * @return {Boolean}\n */\nfunction isNullLiteral(node) {\n  return t.isNullLiteral(node) || t.isIdentifier(node, { name: 'null' });\n}\n\nmodule.exports = {\n  codeFrameWarn,\n  assertVersion,\n  getMemberPathStack,\n  findDeconstructionPathStack,\n  getReferenceStack,\n  isThisExpression,\n  isNullLiteral\n};\n","const t = require('@babel/types');\nconst { DIRECTIVES } = require('../shared');\nconst attrUtil = require('../utils/attribute');\nconst elemUtil = require('../utils/element');\nconst { codeFrameWarn } = require('../utils/util');\n\n\n/**\n * 条件指令的信息\n */\nclass Condition {\n  constructor(directive, path, attrPath) {\n    this.directive = directive;\n    this.path = path;\n    this.attrPath = attrPath;\n  }\n}\n\n\n/**\n * 1. 先找到一个包含if指令的JSXElement，并以它的父节点开始遍历JSXElement\n *    1.1 如果找到包含if指令时，查找其后的else-if及else指令\n *    1.2 在1.1找到的目标指令时，递归查找子节点的if指令，并执行1.1，执行完成后将这次所有的条件语句push到栈中（确保子节点先入栈，遍历时先遍历子节点）\n * 2. 递归查找完成时，将栈里的每组条件指令依次转为为对应的条件表达式\n */\n\n\n// 保存遍历列表（二维数组，每个属性是包含一组条件的数组）\nlet _traverseList = [];\n\n\n/**\n * 遍历包含 if 指令的 JSXElement\n * @param path\n * @return {Array}\n */\nfunction traverseIf(path) {\n  const nestedVisitor = {\n    JSXElement(_path) {\n      const attributes = elemUtil(_path).attributes();\n      const attrs = attributes.filter((attr) => attrUtil(attr).name() === DIRECTIVES.IF);\n      if (attrs.length === 1) {\n        _path.stop(); // 跳过遍历子节点\n        _traverseList.push(traverseCondition(_path, attrs[0]));\n      }\n    }\n  };\n\n  path.traverse(nestedVisitor);\n\n  return _traverseList;\n}\n\n/**\n * 遍历一组条件JSXElement\n * @param path\n * @param attrPath\n * @param _lastResult\n * @return {*|Array}\n */\nfunction traverseCondition(path, attrPath, _lastResult) {\n  const result = _lastResult || [];\n\n  if (result.length === 0 && attrUtil(attrPath).name() === DIRECTIVES.IF) {\n    if (!attrUtil(attrPath).valueExpr()) {\n      throw attrPath.buildCodeFrameError(\n        `\\`${DIRECTIVES.IF}\\` used on element <${elemUtil(path).name()}> without binding value.`\n      );\n    }\n    traverseIf(path);\n    result.push(new Condition(DIRECTIVES.IF, path, attrPath));\n  }\n\n  // 查找else-if指令\n  path = elemUtil(path).nextSibling();\n  attrPath = elemUtil(path).findAttrPath(DIRECTIVES.ELSE_IF);\n  if (attrPath) {\n    if (!attrUtil(attrPath).valueExpr()) {\n      throw attrPath.buildCodeFrameError(\n        `\\`${DIRECTIVES.ELSE_IF}\\` used on element <${elemUtil(path).name()}> without binding value.`\n      );\n    }\n    traverseIf(path);\n    result.push(new Condition(DIRECTIVES.ELSE_IF, path, attrPath));\n    return traverseCondition(path, attrPath, result);\n  }\n\n  // 查找else指令\n  attrPath = elemUtil(path).findAttrPath(DIRECTIVES.ELSE);\n  if (attrPath) {\n    if (attrUtil(attrPath).valueExpr()) {\n      codeFrameWarn(\n        attrPath,\n        `\\`${DIRECTIVES.ELSE}\\` used on element <${elemUtil(path).name()}> should not have a binding value`\n      );\n    }\n    traverseIf(path);\n    result.push(new Condition(DIRECTIVES.ELSE, path, attrPath));\n  }\n\n  return result;\n}\n\n/**\n * 转换一组条件语句\n * @param conditions\n */\nfunction transform(conditions) {\n  // 第一个为if条件，找到并移出if属性\n  const directiveData = conditions[0];\n  const path = directiveData.path;\n  const attrPath = directiveData.attrPath;\n\n  // 顶层元素\n  if (elemUtil(path).isTopElement()) {\n    path.replaceWith(\n      t.conditionalExpression(\n        attrUtil(attrPath).valueExpr(),\n        path.node,\n        t.nullLiteral()\n      )\n    );\n    attrPath.remove();\n    return;\n  }\n\n  path.replaceWith(\n    t.jsxExpressionContainer(\n      conditions.reduceRight((prev, curr, index) => {\n        const testExpr = attrUtil(curr.attrPath).valueExpr();\n\n        let expression;\n        if (!prev) {\n          // 最后一个节点是else\n          if (curr.directive === DIRECTIVES.ELSE) {\n            expression = curr.path.node;\n          } else {\n            expression = t.conditionalExpression(\n              testExpr,\n              curr.path.node,\n              t.nullLiteral()\n            );\n          }\n        } else {\n          expression = t.conditionalExpression(\n            testExpr,\n            curr.path.node,\n            prev\n          );\n        }\n        curr.attrPath.remove();\n        if (index > 0) { // 移出非if指令所在的JSXElement（if指令所在的节点用于替换新的节点）\n          curr.path.remove();\n        }\n        return expression;\n      }, null)\n    )\n  );\n}\n\n/**\n * 转换if指令\n * @param path\n */\nfunction transformIf(path) {\n  if (elemUtil(path).findAttrPath(DIRECTIVES.IF)) {\n    _traverseList = [];\n    traverseIf(path.parentPath);\n\n    _traverseList.forEach((conditions) => transform(conditions));\n  }\n}\n\nmodule.exports = transformIf;\n","const t = require('@babel/types');\nconst { DIRECTIVES } = require('../shared');\nconst { codeFrameWarn } = require('../utils/util');\nconst attrUtil = require('../utils/attribute');\nconst elemUtil = require('../utils/element');\nconst builder = require('../utils/builder');\n\n\n/**\n * 转换show指令\n * @param path\n */\nfunction transformShow(path) {\n  const attrPath = elemUtil(path).findAttrPath(DIRECTIVES.SHOW);\n  if (!attrPath) {\n    return;\n  }\n\n  const bindingValue = attrUtil(attrPath).valueExpr();\n\n  /* istanbul ignore next: print warn info */\n  if (!bindingValue) {\n    codeFrameWarn(\n      attrPath,\n      `\\`${DIRECTIVES.SHOW}\\` used on element <${elemUtil(path).name()}> without binding value`\n    );\n    attrPath.remove();\n    return;\n  }\n\n  // 设置 `style` prop\n  elemUtil(path).mergeProps({\n    prop: 'style',\n    directivePath: attrPath,\n    find(attr, setValue) {\n      const attrName = attrUtil(attr).name();\n      const valueExpr = attrUtil(attr).valueExpr();\n\n      /* istanbul ignore next: print warn info */\n      if (attrName === 'style') {\n        if (t.isStringLiteral(valueExpr)) {\n          codeFrameWarn(\n            attr,\n            'The `style` prop expected a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}}'\n          );\n        } else {\n          setValue(t.objectExpression([\n            t.objectProperty(\n              t.identifier('style'),\n              valueExpr\n            )\n          ]));\n        }\n        return true;\n      }\n\n      /* istanbul ignore next: print warn info */\n      if (/^(style)$/i.test(attrName)) {\n        codeFrameWarn(\n          attr,\n          `Non-lowercase \\`style\\` prop will be ignored, when use \\`${DIRECTIVES.SHOW}\\``\n        );\n        return true;\n      }\n      return false;\n    },\n    getResult(mergeItems) {\n      return t.objectExpression([\n        mergeItems.length > 0 && t.spreadElement(\n          builder.buildCallRuntimeExpression(\n            'merge-props.js',\n            [\n              t.stringLiteral('style'),\n              t.arrayExpression(mergeItems)\n            ],\n            t.thisExpression()\n          )\n        ),\n        t.objectProperty(\n          t.identifier('display'),\n          t.conditionalExpression(\n            bindingValue,\n            t.identifier('undefined'),\n            t.stringLiteral('none')\n          )\n        )\n      ].filter(Boolean));\n    },\n  });\n\n  attrPath.remove();\n}\n\nmodule.exports = transformShow;\n","const t = require('@babel/types');\nconst { DIRECTIVES, opts } = require('../shared');\nconst attrUtil = require('../utils/attribute');\nconst elemUtil = require('../utils/element');\nconst builder = require('../utils/builder');\nconst {\n  codeFrameWarn,\n  getReferenceStack,\n  isThisExpression\n} = require('../utils/util');\n\n\n/**\n * 合并值\n * @param attrPath\n * @param stateBindingStack\n * @param newValExpression\n * @param prevState\n * @param useType\n * @return {{statements: *, value: *}}\n */\nfunction getMergeValueExpression(\n  {\n    attrPath,\n    stateBindingStack,\n    newValExpression,\n    prevState,\n    useType\n  }\n) {\n  const nodeStack = stateBindingStack.map((_path) => _path.node);\n  const statements = [];\n\n  const resolveValues = nodeStack.map((node, index) => {\n    return builder.buildMemberExpression(\n      prevState,\n      ...(index === nodeStack.length - 1\n        ? nodeStack\n        : nodeStack.filter((_, i) => i <= index))\n    );\n  });\n\n  // 定义语句\n  const defineStatements = (node, varId, value, resolveExp) => {\n    if (t.isNumericLiteral(node)) {\n      return [\n        t.variableDeclaration('let', [\n          t.variableDeclarator(\n            varId,\n            t.arrayExpression([\n              t.spreadElement(\n                resolveExp\n              )\n            ])\n          )\n        ]),\n        t.expressionStatement(\n          t.callExpression(\n            t.memberExpression(\n              varId,\n              t.identifier('splice')\n            ),\n            [\n              node,\n              t.numericLiteral(1),\n              value\n            ]\n          )\n        )\n      ];\n    }\n    return [\n      t.variableDeclaration('let', [\n        t.variableDeclarator(\n          varId,\n          t.objectExpression([\n            resolveExp && t.spreadElement(resolveExp),\n            t.objectProperty(\n              node,\n              value\n            )\n          ].filter(Boolean))\n        )\n      ])\n    ];\n  };\n\n  // 返回合并结果表达式\n  const result = nodeStack.reduceRight((prevVar, currentNode, index) => {\n    const scopeVar = attrPath.scope.generateUidIdentifier('val');\n    if (index === 0) {\n      if (useType === 'class') {\n        return t.objectExpression([\n          t.objectProperty(\n            currentNode,\n            prevVar || newValExpression\n          )\n        ]);\n      }\n      if (t.isNumericLiteral(currentNode)) {\n        statements.push(...defineStatements(\n          currentNode,\n          scopeVar,\n          prevVar || newValExpression,\n          prevState\n        ));\n        return scopeVar;\n      }\n      return t.objectExpression([\n        t.spreadElement(\n          prevState\n        ),\n        t.objectProperty(\n          currentNode,\n          prevVar || newValExpression\n        )\n      ]);\n    }\n\n    statements.push(...defineStatements(\n      currentNode,\n      scopeVar,\n      prevVar || newValExpression,\n      resolveValues[index - 1]\n    ));\n\n    return scopeVar;\n  }, null);\n\n  return {\n    statements,\n    result\n  };\n}\n\n/**\n * 创建 this.setState 表达式(Class组件方式)\n * @param attrPath\n * @param stateBindingStack\n * @param newValExpression\n * @return {CallExpression}\n */\nfunction buildClassSetStateExpression(attrPath, stateBindingStack, newValExpression) {\n  const prevStateVar = attrPath.scope.generateUidIdentifier('prevState');\n\n  const {\n    statements,\n    result\n  } = getMergeValueExpression({\n    attrPath,\n    stateBindingStack,\n    newValExpression,\n    prevState: prevStateVar,\n    useType: 'class'\n  });\n\n\n  return [\n    t.expressionStatement(\n      t.callExpression(\n        builder.buildMemberExpression(\n          t.thisExpression(),\n          t.identifier('setState')\n        ),\n        [\n          t.arrowFunctionExpression(\n            [prevStateVar],\n            t.blockStatement([\n              ...statements,\n              t.returnStatement(result)\n            ])\n          )\n        ]\n      )\n    )\n  ];\n}\n\n/**\n * 创建更新状态表达式(HOOK方式)\n * @param attrPath\n * @param stateBindingStack\n * @param newValExpression\n * @return {CallExpression}\n */\nfunction buildHookSetStateExpression(attrPath, stateBindingStack, newValExpression) {\n  const defineVar = stateBindingStack[0].parentPath;\n  /* istanbul ignore next: unknown exception */\n  if (!t.isVariableDeclarator(defineVar && defineVar.node)) {\n    throw attrPath.buildCodeFrameError(\n      `You seem to use \\`${DIRECTIVES.MODEL_HOOK}\\` in the hook method, this is invalid for \\`${DIRECTIVES.MODEL_HOOK}\\`.`\n    );\n  }\n\n  const defineVarId = defineVar.get('id');\n  let canMerge = false;\n  let prevState;\n  let updateFn;\n\n  if (t.isArrayPattern(defineVarId.node)) {\n    prevState = defineVarId.node.elements[0];\n    updateFn = defineVarId.node.elements[1];\n    canMerge = t.isIdentifier(prevState);\n  } else if (t.isObjectPattern(defineVarId.node)) {\n    const find = defineVarId.node.properties.find((n) => (\n      t.isNumericLiteral(n.key) && n.key.value === 1\n    ));\n    if (find) {\n      prevState = defineVarId.node.properties.find((n) => (\n        t.isNumericLiteral(n.key) && n.key.value === 0\n      )).value;\n      canMerge = t.isIdentifier(prevState);\n      updateFn = find.value;\n    }\n  } else if (t.isIdentifier(defineVarId.node)) {\n    prevState = builder.buildMemberExpression(\n      defineVarId.node,\n      t.numericLiteral(0)\n    );\n    updateFn = builder.buildMemberExpression(\n      defineVarId.node,\n      t.numericLiteral(1)\n    );\n    canMerge = true;\n  }\n\n  if (!t.isIdentifier(updateFn) && !t.isMemberExpression(updateFn)) {\n    throw defineVarId.buildCodeFrameError(\n      `You seem to use \\`${DIRECTIVES.MODEL_HOOK}\\` in the hook method, cannot found method to update state.`\n    );\n  }\n\n  stateBindingStack = stateBindingStack.slice(2);\n  let statements = [];\n  let result;\n\n  if (stateBindingStack.length === 0) {\n    result = newValExpression;\n  } else if (!canMerge) {\n    throw defineVarId.buildCodeFrameError(\n      `You seem to use \\`${DIRECTIVES.MODEL_HOOK}\\` in the hook method, which cannot be merged with the previous value.`\n    );\n  } else {\n    const mergeResult = getMergeValueExpression({\n      attrPath,\n      stateBindingStack,\n      newValExpression,\n      prevState,\n      useType: 'hook'\n    });\n    statements = mergeResult.statements;\n    result = mergeResult.result;\n  }\n\n  return [\n    ...statements,\n    t.expressionStatement(\n      t.callExpression(\n        updateFn,\n        [result]\n      )\n    )\n  ];\n}\n\n/**\n * 设置value prop\n * @param path\n * @param attrPath\n * @param bindingValue\n */\nfunction setValueProp(path, attrPath, bindingValue) {\n  elemUtil(path).mergeProps({\n    prop: 'value',\n    directivePath: attrPath,\n    noResolve: true,\n    find(attr) {\n      /* istanbul ignore next: print warn info */\n      if (attrUtil(attr).name() === 'value') {\n        codeFrameWarn(\n          attr,\n          `The \\`value\\` prop will be ignored, when use \\`${attrUtil(attrPath).name()}\\``\n        );\n        return true;\n      }\n      return false;\n    },\n    getResult: () => bindingValue\n  });\n}\n\n/**\n * 设置onChange prop\n * @param path\n * @param attrPath\n * @param stateBindingStack\n * @param useType\n */\nfunction setOnChangeProp(path, attrPath, stateBindingStack, useType) {\n  const argsVar = path.scope.generateUidIdentifier('args');\n  const valueVar = path.scope.generateUidIdentifier('value');\n  const setStateExpression = useType === 'class'\n    ? buildClassSetStateExpression(attrPath, stateBindingStack, valueVar)\n    : buildHookSetStateExpression(attrPath, stateBindingStack, valueVar);\n\n  elemUtil(path).mergeProps({\n    prop: 'onChange',\n    directivePath: attrPath,\n    noResolve: true,\n    find(attr, setValue) {\n      if (attrUtil(attr).name() === 'onChange') {\n        setValue(t.objectExpression([\n          t.objectProperty(\n            t.identifier('onChange'),\n            attrUtil(attr).valueExpr()\n          )\n        ]));\n        return true;\n      }\n      return false;\n    },\n    getResult(mergeItems) {\n      return t.arrowFunctionExpression(\n        [t.restElement(argsVar)],\n        t.blockStatement([\n\n          /**\n           * let _val = require('babel-plugin-react-directives/runtime/resolve-value.js')(_args)\n           */\n          t.variableDeclaration('let', [\n            t.variableDeclarator(\n              valueVar,\n              builder.buildCallRuntimeExpression(\n                'resolve-value.js',\n                [argsVar]\n              )\n            )\n          ]),\n\n          /**\n           * 执行更新state方法\n           */\n          ...setStateExpression,\n\n          /**\n           * require('babel-plugin-react-directives/runtime/invoke-onchange.js').call(this, _args, []);\n           */\n          mergeItems.length > 0 && t.expressionStatement(\n            builder.buildCallRuntimeExpression(\n              'invoke-onchange.js',\n              [\n                argsVar,\n                t.arrayExpression(mergeItems)\n              ],\n              t.thisExpression()\n            )\n          )\n        ].filter(Boolean))\n      );\n    }\n  });\n}\n\n/**\n * 转换model指令\n * @param path\n */\nfunction transformModel(path) {\n  let useType = null; // 'class' | 'hook' | null\n  let attrPath;\n  if (attrPath = elemUtil(path).findAttrPath(DIRECTIVES.MODEL)) {\n    useType = 'class';\n  } else if (attrPath = elemUtil(path).findAttrPath(DIRECTIVES.MODEL_HOOK)) {\n    useType = 'hook';\n  } else {\n    return;\n  }\n\n  const bindingValue = attrUtil(attrPath).valueExpr();\n\n  /* istanbul ignore next: print warn info */\n  if (!bindingValue) {\n    codeFrameWarn(\n      attrPath,\n      `\\`${attrUtil(attrPath).name()}\\` used on element <${elemUtil(path).name()}> without binding value`\n    );\n    attrPath.remove();\n    return;\n  }\n\n  const valuePath = attrUtil(attrPath).valuePath();\n  const stateBindingStack = getReferenceStack(valuePath);\n\n  if (useType === 'class') {\n    const thisPath = stateBindingStack.shift();\n    const statePath = stateBindingStack.shift();\n    if (\n      !isThisExpression(thisPath && thisPath.node)\n      || (\n        !t.isIdentifier(statePath && statePath.node, { name: 'state' })\n        && !t.isStringLiteral(statePath && statePath.node, { value: 'state' })\n      )\n    ) {\n      throw valuePath.buildCodeFrameError(\n        `The \\`${DIRECTIVES.MODEL}\\` binding value should define in \\`this.state\\`.`\n      );\n    }\n    if (stateBindingStack.length === 0) {\n      throw valuePath.buildCodeFrameError(\n        `The \\`${DIRECTIVES.MODEL}\\` binding value cannot be \\`this.state\\`.`\n      );\n    }\n    if (t.isNumericLiteral(stateBindingStack[0].node)) {\n      throw valuePath.buildCodeFrameError(\n        `The \\`${DIRECTIVES.MODEL}\\` binding value cannot use \\`this.state\\` as an array.`\n      );\n    }\n  } else if (useType === 'hook') {\n    const useStatePath = stateBindingStack[0];\n    let valid = false;\n    if (!t.isCallExpression(useStatePath && useStatePath.node)) {\n      valid = false;\n    } else {\n      const callee = useStatePath.node.callee;\n      if (\n        t.isIdentifier(callee, { name: 'useState' })\n        || (t.isMemberExpression(callee)\n        && t.isIdentifier(callee.object, { name: opts.pragmaType })\n        && (t.isIdentifier(callee.property, { name: 'useState' })\n          || t.isStringLiteral(callee.property, { value: 'useState' })))\n      ) {\n        valid = true;\n      }\n    }\n    if (!valid) {\n      throw valuePath.buildCodeFrameError(\n        `You seem to use \\`${DIRECTIVES.MODEL_HOOK}\\` in the hook method, `\n        + `the \\`${DIRECTIVES.MODEL_HOOK}\\` binding value cannot be found in the returned of \\`${opts.pragmaType}.useState()\\`.`\n      );\n    }\n\n    const stateValuePath = stateBindingStack[1];\n    if (\n      !t.isNumericLiteral(stateValuePath && stateValuePath.node)\n      || stateValuePath.node.value !== 0\n    ) {\n      throw valuePath.buildCodeFrameError(\n        `You seem to use \\`${DIRECTIVES.MODEL_HOOK}\\` in the hook method, `\n        + `the \\`${DIRECTIVES.MODEL_HOOK}\\` binding value cannot be found in the first returned of \\`${opts.pragmaType}.useState()\\`. `\n        + 'Usage example: `let [data, setData] = useState(initialValue)`, `data` should be used as the binding value.'\n      );\n    }\n  }\n\n  setValueProp(path, attrPath, bindingValue);\n  setOnChangeProp(path, attrPath, stateBindingStack, useType);\n  attrPath.remove();\n}\n\nmodule.exports = transformModel;\n","const t = require('@babel/types');\nconst { DIRECTIVES } = require('../shared');\nconst attrUtil = require('../utils/attribute');\nconst elemUtil = require('../utils/element');\nconst { codeFrameWarn } = require('../utils/util');\n\n/**\n * 转换for遍历指令\n * @param path\n */\nfunction transformFor(path) {\n  const attrPath = elemUtil(path).findAttrPath(DIRECTIVES.FOR);\n  if (!attrPath) {\n    return;\n  }\n\n  const bindingValue = attrUtil(attrPath).valueExpr();\n\n  /* istanbul ignore next: print warn info */\n  if (!bindingValue) {\n    codeFrameWarn(\n      attrPath,\n      `\\`${DIRECTIVES.FOR}\\` used on element <${elemUtil(path).name()}> without binding value`\n    );\n    attrPath.remove();\n    return;\n  }\n\n  const valuePath = attrUtil(attrPath).valuePath();\n\n  if (!t.isBinaryExpression(bindingValue, { operator: 'in' })) {\n    throw valuePath.buildCodeFrameError(\n      `The \\`${DIRECTIVES.FOR}\\` used on element <${elemUtil(path).name()}> with invalid binding value. `\n      + `Usage example: \\`<div ${DIRECTIVES.FOR}={(item, index) in list}>{item}</div>\\``\n    );\n  }\n  if (\n    !t.isIdentifier(bindingValue.left)\n    && (!t.isSequenceExpression(bindingValue.left)\n      || !bindingValue.left.expressions.every((n) => t.isIdentifier(n))\n    )) {\n    throw valuePath.get('left').buildCodeFrameError(\n      `The \\`${DIRECTIVES.FOR}\\` used on element <${elemUtil(path).name()}> with invalid binding value. `\n      + `Usage example: \\`<div ${DIRECTIVES.FOR}={(item, index) in list}>{item}</div>\\``\n    );\n  }\n\n  const traverseTarget = bindingValue.right;\n  let traverseArgs;\n\n  // 最多2个参数\n  if (t.isSequenceExpression(bindingValue.left)) {\n    if (bindingValue.left.expressions.length > 2) {\n      codeFrameWarn(\n        valuePath.get('left'),\n        `The \\`${DIRECTIVES.FOR}\\` binding value has up to 2 parameters for traversal, and the extra parameters are ignored.`\n      );\n    }\n    traverseArgs = bindingValue.left.expressions.slice(0, 2);\n  } else {\n    traverseArgs = [bindingValue.left];\n  }\n\n  let replacement = t.callExpression(\n    t.memberExpression(\n      traverseTarget,\n      t.identifier('map')\n    ),\n    [\n      t.arrowFunctionExpression(\n        traverseArgs,\n        { ...path.node }\n      )\n    ]\n  );\n  // 非顶层Element\n  if (!elemUtil(path).isTopElement()) {\n    replacement = t.jsxExpressionContainer(\n      replacement\n    );\n  }\n\n  path.replaceWith(\n    replacement\n  );\n\n  attrPath.remove();\n}\n\nmodule.exports = transformFor;\n","const t = require('@babel/types');\nconst { DIRECTIVES } = require('../shared');\nconst attrUtil = require('../utils/attribute');\nconst elemUtil = require('../utils/element');\nconst builder = require('../utils/builder');\nconst { codeFrameWarn } = require('../utils/util');\n\n/**\n * 转换className\n * @param path\n */\nfunction transformClass(path) {\n  const attrPath = elemUtil(path).findAttrPath(DIRECTIVES.CLASS);\n  if (!attrPath) {\n    return;\n  }\n\n  const bindingValue = attrUtil(attrPath).valueExpr();\n\n  /* istanbul ignore next: print warn info */\n  if (!bindingValue) {\n    codeFrameWarn(\n      attrPath,\n      `\\`${DIRECTIVES.CLASS}\\` used on element <${elemUtil(path).name()}> without binding value`\n    );\n    attrPath.remove();\n    return;\n  }\n\n  // 设置 `className` prop\n  elemUtil(path).mergeProps({\n    prop: 'className',\n\n    directivePath: attrPath,\n\n    find(attr, setValue) {\n      const attrName = attrUtil(attr).name();\n      const valueExpr = attrUtil(attr).valueExpr();\n\n      if (attrName === 'className') {\n        setValue(t.objectExpression([\n          t.objectProperty(\n            t.identifier('className'),\n            valueExpr\n          )\n        ]));\n\n        return true;\n      }\n\n      return false;\n    },\n\n    getResult(mergeItems) {\n      if (mergeItems.length > 0) {\n        return builder.buildCallRuntimeExpression(\n          'classnames.js',\n          [\n            t.arrayExpression([\n              mergeItems.length > 0 && builder.buildCallRuntimeExpression(\n                'merge-props.js',\n                [\n                  t.stringLiteral('className'),\n                  t.arrayExpression(mergeItems)\n                ],\n                t.thisExpression()\n              ),\n              bindingValue\n            ].filter(Boolean))\n          ]\n        );\n      }\n\n      return builder.buildCallRuntimeExpression(\n        'classnames.js',\n        [bindingValue]\n      );\n    },\n  });\n\n  attrPath.remove();\n}\n\nmodule.exports = transformClass;\n","import throttle from 'lodash/throttle';\nimport defaultJsCode from './code/js';\nimport defaultCssCode from './code/css';\nimport defaultOptionsCode from './code/options';\n\nmonaco.editor.defineTheme('default-theme', require('monaco-themes/themes/Solarized-light'));\n\nmonaco.editor.setTheme('default-theme');\n\nconst editorStyle = {\n  fontSize: 14,\n  lineHeight: 24,\n  tabSize: 2\n};\nconst minimap = { enabled: false };\n\nlet currentTab = 'js';\n\nconst jsEditor = monaco.editor.create(document.getElementById('editor-js'), {\n  language: 'javascript',\n  value: defaultJsCode,\n  minimap,\n  ...editorStyle\n});\nconst cssEditor = monaco.editor.create(document.getElementById('editor-css'), {\n  language: 'css',\n  value: defaultCssCode,\n  minimap,\n  ...editorStyle\n});\nconst optionsEditor = monaco.editor.create(document.getElementById('editor-options'), {\n  language: 'json',\n  value: defaultOptionsCode,\n  minimap,\n  ...editorStyle\n});\n\ndocument.querySelector('#editor-tabs .js-tabs__tabs-container').addEventListener('click', (e) => {\n  const tab = e.target.getAttribute('data-tab');\n  switch (tab) {\n    case 'js':\n      currentTab = 'js';\n      break;\n    case 'css':\n      currentTab = 'css';\n      break;\n    case 'options':\n      currentTab = 'options';\n      break;\n    default:\n  }\n  refreshActiveEditor();\n});\n\nfunction refreshActiveEditor() {\n  setTimeout(() => {\n    switch (currentTab) {\n      case 'js':\n        jsEditor.layout();\n        break;\n      case 'css':\n        cssEditor.layout();\n        break;\n      case 'options':\n        optionsEditor.layout();\n        break;\n      default:\n    }\n  });\n}\n\nwindow.addEventListener('resize', throttle(() => {\n  refreshActiveEditor();\n}, 10));\n\nexport default {\n  jsEditor,\n  cssEditor,\n  optionsEditor\n};\n","const js = `export default function App() {\n  const [disabled, setDisabled] = React.useState(false);\n\n  return (\n    <div>\n      <button\n        onClick={() => setDisabled(!disabled)}\n        className=\"btn\"\n        x-class={{\n          'disabled-btn': disabled\n        }}>\n        <span x-if={disabled}>Disabled</span>\n        <span x-else>Available</span>\n      </button>\n    </div>\n  )\n};\n`;\n\nexport default js;\n","const css = `#app {\n  padding: 20px;\n}\n\n.btn {\n  padding: 10px 15px;\n  font-size: 14px;\n  border-radius: 4px;\n  outline: 0;\n  color: #ffffff;\n  background-color: #1890ff;\n  border-color: #1890ff;\n  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.12);\n  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.045);\n  cursor: pointer;\n \n}\n\n.disabled-btn {\n  color: #ffffff;\n  background-color: #8cc8ff;\n  border-color: #8cc8ff;\n}\n`;\n\nexport default css;\n","const options = `{\n  \"prefix\": \"x\",\n  \"pragmaType\": \"React\"\n}`;\n\nexport default options;\n","const preview = document.querySelector('.preview-render');\n\nlet style = null;\nlet ready = false;\nlet previewWindow = null;\nlet previewDocument = null;\nlet _autoRender = null;\n\n// delay load with no-cache\npreview.src = `./playground.html?${Date.now()}`;\n\npreview.addEventListener('load', () => {\n  ready = true;\n  previewWindow = preview.contentWindow;\n  previewDocument = preview.contentWindow.document;\n  if (typeof _autoRender === 'function') {\n    _autoRender();\n  }\n});\n\nexport function updateCSS(css = '') {\n  if (!style) {\n    style = previewDocument.getElementById('style');\n  }\n  style.innerHTML = css;\n}\n\nfunction render(js, options) {\n  try {\n    const { code } = Babel.transform(js, {\n      presets: [\n        Babel.availablePresets.es2017,\n        Babel.availablePresets.react\n      ],\n      plugins: [\n        [require('../../src/index'), JSON.parse(options)],\n        Babel.availablePlugins['proposal-object-rest-spread'],\n        Babel.availablePlugins['proposal-class-properties'],\n      ]\n    });\n\n    previewWindow.__render__(code);\n  } catch (e) {\n    previewWindow.__catchError__(e);\n  }\n}\n\nexport function renderPreview({ js, css, options }) {\n  if (ready) {\n    render(js, options);\n    updateCSS(css);\n  } else {\n    _autoRender = () => {\n      render(js, options);\n      updateCSS(css);\n    };\n  }\n}\n","import JsTabs from 'js-tabs';\nimport debounce from 'lodash/debounce';\nimport 'js-tabs/dist/main/js-tabs-base.css';\nimport './style/index.css';\nimport './style/loading.css';\n\nimport editors from './editor';\nimport { renderPreview, updateCSS } from './preview';\n\nfunction getRenderValues() {\n  return {\n    js: editors.jsEditor.getValue(),\n    css: editors.cssEditor.getValue(),\n    options: editors.optionsEditor.getValue()\n  };\n}\n\neditors.cssEditor.onDidChangeModelContent(debounce(() => {\n  updateCSS(editors.cssEditor.getValue());\n}, 600));\nconst _renderPreview = debounce(() => {\n  renderPreview(getRenderValues());\n}, 600);\neditors.jsEditor.onDidChangeModelContent(_renderPreview);\neditors.optionsEditor.onDidChangeModelContent(_renderPreview);\n\nsetTimeout(() => {\n  renderPreview(getRenderValues());\n});\n\n// init tabs\nnew JsTabs({ elm: '.left-section' }).init();\nnew JsTabs({ elm: '.right-section' }).init();\n\n// hide app loading\ndocument.querySelector('.app-loading').style.display = 'none';\n","const t = require('@babel/types');\nconst assert = require('assert');\n\n/**\n * 构建成员调用表达式，第一个参数为对象，其后参数为属性\n * @param args\n * @return {Expression}\n */\nfunction buildMemberExpression(...args) {\n  assert(args.length >= 2, 'at least 2 parameters are required');\n\n  return args.reduce((prev, curr) => {\n    if (!prev) {\n      return curr;\n    }\n    return t.memberExpression(prev, curr, t.isNumericLiteral(curr));\n  });\n}\n\n/**\n * 构建调用运行时方法表达式\n * @param fileName\n * @param args\n * @param contextExpr\n * @return {Expression}\n */\nfunction buildCallRuntimeExpression(fileName, args = [], contextExpr = null) {\n  assert(\n    typeof fileName === 'string' && fileName,\n    'fileName should be a non-empty string'\n  );\n\n  const runtimeMethodExpr = t.callExpression(\n    t.identifier('require'),\n    [t.stringLiteral(`babel-plugin-react-directives/runtime/${fileName}`)]\n  );\n\n  let callee = runtimeMethodExpr;\n  if (contextExpr) {\n    callee = t.memberExpression(\n      runtimeMethodExpr,\n      t.identifier('call')\n    );\n    args = [contextExpr, ...args];\n  }\n\n  return t.callExpression(\n    callee,\n    args\n  );\n}\n\nmodule.exports = {\n  buildMemberExpression,\n  buildCallRuntimeExpression\n};\n"],"sourceRoot":""}